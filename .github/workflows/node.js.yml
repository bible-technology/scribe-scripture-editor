# This workflow will do a clean install of node dependencies, build the source code, and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
    push:
        branches: [development]

jobs:
    build:
        runs-on: ubuntu-latest
        env:
            CI: false
            NODE_OPTIONS: --max-old-space-size=4096
        strategy:
            matrix:
                node-version: [18.20.3]

        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js 18.20.3
              uses: actions/setup-node@v1
              with:
                  node-version: 18.20.3
            - run: |
                  node --version
                  yarn --version
            - name: set @bitregistry translation-help
              run: yarn config set '@bit:registry' https://node.bit.dev

            - name: yarn install
              run: yarn install

            - name: package
              id: package
              run: |
                  yarn dist

            - name: Cleanup artifacts
              run: |
                  npx rimraf "dist/!(*.deb|*.AppImage|*.dmg|*.exe)"
            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                name: Scribe-${{ github.run_id }}-${{ github.sha }}
                path: dist
                overwrite: true

    build-windows:
        runs-on: ubuntu-latest
        env:
            CI: false
            NODE_OPTIONS: --max-old-space-size=4096
        strategy:
            matrix:
                node-version: [18.20.3]

        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js 18.20.3
              uses: actions/setup-node@v1
              with:
                  node-version: 18.20.3
            - run: |
                  node --version
                  yarn --version

            - name: set @bitregistry translation-help
              run: yarn config set '@bit:registry' https://node.bit.dev

            - name: install dependencies
              run: yarn install

            - name: install wine
              run: |
                  sudo dpkg --add-architecture i386
                  sudo apt update
                  sudo apt install -y wine32 wine64

            - name: build executable
              run: yarn dist --win --x64

            - name: Cleanup artifacts
              run: |
                  mkdir -p artifacts
                  mv dist/*.exe artifacts
            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                name: Scribe
                path: artifacts
                overwrite: true
    # Commented the below code for getting the binaries build for windows and Ubuntu
    build-mac:
        runs-on: macos-latest
        env:
            CI: false
            NODE_OPTIONS: --max-old-space-size=4096
        strategy:
            matrix:
                node-version: [18.20.3]

        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js 18.20.3
              uses: actions/setup-node@v1
              with:
                  node-version: 18.20.3
            - run: |
                  node --version
                  yarn --version
            - name: Increase file descriptor limit
              run: sudo sysctl -w kern.maxfiles=10485760 && sudo sysctl -w kern.maxfilesperproc=1048576
            - name: set @bitregistry translation-help
              run: yarn config set '@bit:registry' https://node.bit.dev

            - name: Install Homebrew
              run: |
                  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
                  echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> $HOME/.zprofile
                  eval "$(/opt/homebrew/bin/brew shellenv)"

            - name: Install canvas dependencies
              run: |
                  brew install pkg-config cairo pango libpng jpeg giflib librsvg python@3.12
                  brew reinstall jpeg
                  echo 'export PATH="/opt/homebrew/opt/jpeg/bin:$PATH"' >> $HOME/.zprofile
                  echo 'export LDFLAGS="-L/opt/homebrew/opt/jpeg/lib"' >> $HOME/.zprofile
                  echo 'export CPPFLAGS="-I/opt/homebrew/opt/jpeg/include"' >> $HOME/.zprofile
                  echo 'export PKG_CONFIG_PATH="/opt/homebrew/opt/jpeg/lib/pkgconfig"' >> $HOME/.zprofile
                  eval "$(/opt/homebrew/bin/brew shellenv)"
                  brew install python-setuptools

            - name: yarn install
              run: yarn install

            - name: install dmg-license
              run: yarn add dmg-license

            - name: package
              id: package
              run: |
                  yarn dist

            - name: Cleanup artifacts
              run: |
                  npx rimraf "dist/!(*.deb|*.AppImage|*.dmg|*.exe)"
            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                name: Scribe-Mac-${{ github.run_id }}-${{ github.sha }}
                path: dist
                overwrite: true